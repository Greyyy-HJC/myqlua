package.path = package.path .. ';../module/qlib/?.qlua;../module/lhpc/?.qlua'
require "strict"
require "gaugefix"
require "stdlib"
require "latvec"

latsize = {48, 48, 48, 64}
gauge_file = "../config/MILC/l4864f21b7373m00125m0250a.4314"

L = qcd.lattice(latsize)
Nd = #L
u = qcd.milc.read_gauge(L, gauge_file)
vol = L:volume()
Nc = u[1]:colors()

gf_accu = 1e-8
gf_maxiter = 1000

for mu = 0, Nd - 1 do
    printf("# [%d]\t%e\t%e\n", mu, u[1 + mu]:norm2() / (Nc * vol),
           u[1 + mu]:trace():real():sum() / (Nc * vol))
end

-- Fourier-accelerated (nonlinear) CG
g, iter, tol = gaugefix_facg(u, gaugefix_coulomb_func, gaugefix_coulomb_grad,
                             gf_accu, gf_maxiter, true)

ufix = gauge_transform_U(g, u)

printf("### maxiter=%d   gf_accu=%e\n", gf_maxiter, gf_accu)
printf("### iter=%d    gfix=%e   ReTr(g)=%e\n", iter, tol,
       g:trace():real():sum() / (Nc * vol))
for mu = 0, Nd - 1 do
    printf("# [%d]\t%e\t%e\n", mu, ufix[1 + mu]:norm2() / (Nc * vol),
           ufix[1 + mu]:trace():real():sum() / (Nc * vol))
end
